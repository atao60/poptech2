{"version":3,"sources":["./src/environments/environment.ts","./src/app/shared/services/theme.service.ts","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable, Renderer2, RendererFactory2 } from '@angular/core';\n\nexport enum Scheme { light, dark };\n\nconst defaultScheme = Scheme.light;\n\nconst localStorageTag = 'prefers-scheme';\n\nconst prefersColorSchemeTag = 'prefers-color-scheme';\n\nconst themePrefix= 'theme-';\n\n@Injectable({ providedIn: 'root' })\nexport class ThemeService {\n  private currentScheme: Scheme;\n  private readonly renderer: Renderer2;\n\n  constructor(readonly rendererFactory2: RendererFactory2) {\n    this.renderer = rendererFactory2.createRenderer(null, null);\n    this.currentScheme = defaultScheme;\n  }\n\n  get scheme() {\n    return this.currentScheme;\n  }\n\n  load() {\n    const scheme = this.getCurrentScheme();\n    this.add(scheme);\n    this.remove(scheme === Scheme.dark ? Scheme.light : Scheme.dark);\n  }\n\n  update() {\n    const updatedScheme = this.scheme === Scheme.dark ? Scheme.light : Scheme.dark;\n    this.remove(this.scheme);\n    this.add(updatedScheme);\n    localStorage.setItem(localStorageTag, Scheme[updatedScheme]);\n    this.currentScheme = updatedScheme;\n  }\n\n  private remove(scheme: Scheme) {\n    this.renderer.removeClass(document.body, `${themePrefix}${Scheme[scheme]}`);\n  }\n\n  private add(scheme: Scheme) {\n    this.renderer.addClass(document.body, `${themePrefix}${Scheme[scheme]}`);\n  }\n\n  private getCurrentScheme() {\n    const scheme = localStorage.getItem(localStorageTag);\n    if (scheme != null) {\n      this.currentScheme = (<any>Scheme)[scheme];\n    }\n    else if (window.matchMedia(`(${prefersColorSchemeTag})`).media !== 'not all') {\n      this.currentScheme = window.matchMedia(`(${prefersColorSchemeTag}: ${Scheme[Scheme.dark]})`).matches\n        ? Scheme.dark\n        : Scheme.light;\n    }\n    else {\n      // default to light theme if browser does not support prefers-color-scheme\n      this.currentScheme = defaultScheme;\n    }\n    return this.currentScheme;\n  }\n}\n","import { Component } from '@angular/core';\nimport { ThemeService } from './shared/services/theme.service';\n\n@Component({\n  selector: 'app-root',\n  template: `\n    <div class=\"container mx-auto p-8\">\n      <router-outlet></router-outlet>\n    </div>\n  `,\n  styles: []\n})\nexport class AppComponent {\n  constructor(readonly themeService: ThemeService) {\n    themeService.load();\n  }\n  title = 'popsuite-site';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ScullyLibModule } from '@scullyio/ng-lib';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    ScullyLibModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [\n    {\n        path: 'blog',\n        loadChildren: () =>\n            import('./blog/blog.module').then((m) => m.BlogModule)\n    },\n    {\n        path: '',\n        loadChildren: () =>\n            import('./home/home.module').then((m) => m.HomeModule)\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forRoot(routes)],\n    exports: [RouterModule]\n})\nexport class AppRoutingModule {}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}